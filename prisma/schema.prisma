// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      UserRole @default(STUDENT)

  questions Question[]
  answers   Answer[]

  @@map("users")
}

model Question {
  id           String    @id @default(cuid())
  title        String
  slug         String    @unique
  content      String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  authorId     String
  bestAnswerId String?   @unique

  author     User     @relation(fields: [authorId], references: [id])
  bestAnswer Answer?  @relation("bestAnswer", fields: [bestAnswerId], references: [id])
  answers    Answer[]

  @@map("questions")
}

model Answer {
  id             String   @id @default(cuid())
  content        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  questionId     String
  authorId       String
  bestAnswerOnId String?

  author       User      @relation(fields: [authorId], references: [id])
  bestAnswerOn Question? @relation("bestAnswer")
  question     Question  @relation(fields: [questionId], references: [id])

  @@map("answers")
}